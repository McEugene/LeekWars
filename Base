if (getWeapon() != WEAPON_SHOTGUN) {
	setWeapon(WEAPON_SHOTGUN); // Warning: costs 1 TP	
}

var enemy = getNearestEnemy();

var mpsLeft = getTotalMP();
var enemyCells = getCellsToUseWeapon(enemy);

while (shouldMove(enemy) && mpsLeft > 0) {
	moveTowardCells(enemyCells, 1);
	mpsLeft = mpsLeft - 1;
}


useAllWeaponIfPossible(enemy);
useOnEnemyIfPossible(CHIP_ROCK, enemy);
useIfArmed(CHIP_CURE);
useIfPossible(CHIP_HELMET, shouldUseShield(enemy));
useIfArmed(CHIP_BANDAGE);
useAllOnEnemyIfPossible(CHIP_SPARK, enemy);

//moveAwayFrom(enemy);

////////////
// FUNCTIONS
////////////
function shouldMove(enemy) {
	return !canUseWeapon(enemy);
}
function hasSomethingToDo(enemy) {
	return canUseChip(CHIP_SPARK, enemy) 
		|| canUseWeapon(enemy);
}

function shouldUseShield(enemy) {
	return enemy != null && getCellDistance(getCell(), getCell(enemy)) < 10 + 4;
}

function isArmed(leek) {
	return getTotalLife(leek) > getLife(leek);
}

function useIfArmed(chip) {
	if (canUseChip(chip, getLeek()) && isArmed(getLeek())) {
		useChip(chip, getLeek());
	}
}

function useIfPossible(chip, shouldUse) {
	if (shouldUse && canUseChip(chip, getLeek())) {
		useChip(chip, getLeek());
	}
}

function useOnEnemyIfPossible(chip, enemy) {
	if (canUseChip(chip, enemy)) {
		return useChip(chip, enemy);
	}
}

function useAllOnEnemyIfPossible(chip, enemy) {
	var result;
	do {
		result = useOnEnemyIfPossible(chip, enemy);
	} while (result > 0);
}

function useWeaponIfPossible(enemy){
	if (canUseWeapon(enemy)) {
		return useWeapon(enemy);
	}
}
function useAllWeaponIfPossible(enemy){
	var result;
	do {
		result = useWeaponIfPossible(enemy);
	} while (result > 0);
}
