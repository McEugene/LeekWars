var enemy = getNearestEnemy();
var mpsLeft = getTotalMP();

if (couldBeCAC(enemy, mpsLeft)) {
	setWeaponIfNeeded(WEAPON_BROADSWORD);
	mpsLeft = mpsLeft - moveToward(enemy);
} else {
	setWeaponIfNeeded(WEAPON_MAGNUM);
	var enemyCells = getCellsToUseWeapon(enemy);

	while (shouldMove(enemy) && mpsLeft > 0) {
		moveTowardCells(enemyCells, 1);
		mpsLeft = mpsLeft - 1;
	}
}

useIfPossible(CHIP_SHIELD, isNearEnough(enemy));
useAllWeaponIfPossible(enemy);
useOnEnemyIfPossible(CHIP_VENOM, enemy);
useIfArmed(CHIP_CURE);
useIfArmed(CHIP_BANDAGE);
useIfPossible(CHIP_STRETCHING, isNearEnough(enemy));
useAllOnEnemyIfPossible(CHIP_SPARK, enemy);

moveToward(enemy);

////////////
// FUNCTIONS
////////////
function setWeaponIfNeeded(weapon) {
	if (getWeapon() != weapon) {
		setWeapon(weapon); // Warning: costs 1 TP	
	}
}

function shouldMove(enemy) {
	return !canUseWeapon(enemy) 
		|| !lineOfSight(getCell(), getCell(enemy));
}

function couldBeCAC(enemy, mpsLeft) {
	return getPathLength(getCell(), getCell(enemy)) <= mpsLeft;
}

function isNearEnough(enemy) {
	return getCell(enemy) != null 
	&& getCellDistance(getCell(), getCell(enemy)) < 10 + 4
	&& getLife(enemy) > 120;
}

function isArmed(leek) {
	return getTotalLife(leek) > getLife(leek);
}	

function useIfArmed(chip) {
	if (canUseChip(chip, getLeek()) && isArmed(getLeek())) {
		useChip(chip, getLeek());
	}
}

function useIfPossible(chip, shouldUse) {
	if (shouldUse && canUseChip(chip, getLeek())) {
		useChip(chip, getLeek());
	}
}

function useOnEnemyIfPossible(chip, enemy) {
	if (canUseChip(chip, enemy)) {
		return useChip(chip, enemy);
	}
}

function useAllOnEnemyIfPossible(chip, enemy) {
	var result;
	do {
		result = useOnEnemyIfPossible(chip, enemy);
	} while (result > 0);
}

function useWeaponIfPossible(enemy){
	if (canUseWeapon(enemy)) {
		return useWeapon(enemy);
	}
}
function useAllWeaponIfPossible(enemy){
	var result;
	do {
		result = useWeaponIfPossible(enemy);
	} while (result > 0);
}
